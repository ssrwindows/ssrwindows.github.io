<!DOCTYPE html>
<html xml:lang="zh-CN" lang="zh-CN">

<head>
        <link rel="canonical" href="https://ssrwindows.github.io/news/article-104491.htm" />
    <meta charset="utf-8">
    <meta content="width=device-width, initial-scale=1.0" name="viewport">
    <title>JAVA8-Lambda表达式</title>
        <meta name="description" content="前言 行为参数化，是将方法作为参数进行传递，可以适应更多的需求变化。 行为参数化中的方法参数，在JDK8之前可以使用匿名累来进行传递，也可以通过一个指定接口实现一个类来进行传递。 总之，行为参数化传递" />
        <link rel="icon" href="/assets/website/img/ssrwindows/favicon.ico" type="image/x-icon"/>

    <meta name="author" content="SSR Windows免费节点订阅站">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://ssrwindows.github.io/news/article-104491.htm" />
    <meta property="og:site_name" content="SSR Windows免费节点订阅站" />
    <meta property="og:title" content="JAVA8-Lambda表达式" />
    <meta property="og:image" content="https://ssrwindows.github.io/uploads/20240730/0fa65520b08155351b2c9af33477579f.webp" />
        <meta property="og:release_date" content="2025-04-26T07:38:51" />
    <meta property="og:updated_time" content="2025-04-26T07:38:51" />
        <meta property="og:description" content="前言 行为参数化，是将方法作为参数进行传递，可以适应更多的需求变化。 行为参数化中的方法参数，在JDK8之前可以使用匿名累来进行传递，也可以通过一个指定接口实现一个类来进行传递。 总之，行为参数化传递" />
    
    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="JAVA8-Lambda表达式">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
    <link rel="dns-prefetch" href="https://fonts.googleapis.com">

    <!-- Google Fonts -->
    <link href="https://fonts.googleapis.com/css?family=Open+Sans:300,300i,400,400i,600,600i,700,700i|Raleway:300,300i,400,400i,500,500i,600,600i,700,700i|Poppins:300,300i,400,400i,500,500i,600,600i,700,700i" rel="stylesheet">
    <!-- Vendor CSS Files -->
    <link href="/assets/website/js/frontend/ssrwindows/aos/aos.css" rel="stylesheet">
    <link href="/assets/website/js/frontend/ssrwindows/bootstrap/css/bootstrap.min.css" rel="stylesheet">
    <link href="/assets/website/js/frontend/ssrwindows/bootstrap-icons/bootstrap-icons.css" rel="stylesheet">
    <link href="/assets/website/js/frontend/ssrwindows/boxicons/css/boxicons.min.css" rel="stylesheet">
    <link href="/assets/website/js/frontend/ssrwindows/glightbox/css/glightbox.min.css" rel="stylesheet">
    <link href="/assets/website/js/frontend/ssrwindows/swiper/swiper-bundle.min.css" rel="stylesheet">
    <!-- Template Main CSS File -->
    <link href="/assets/website/css/ssrwindows/style.css" rel="stylesheet">
    <link rel="stylesheet" href="/assets/website/css/G.css" />
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-RSKEBF5GLS"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-RSKEBF5GLS');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
        <!-- ======= Header ======= -->
    <header id="header" class="fixed-top  header-transparent ">
        <div class="container d-flex align-items-center justify-content-between">
            <div class="logo">
                <a href="/">
                                <span>SSR Windows</span>
                                </a>
            </div>
            <nav id="navbar" class="navbar">
                <ul>
                                        <li><a class="nav-link" href="/">首页</a></li>
                                        <li><a class="nav-link" href="/free-nodes/">免费节点</a></li>
                                        <li><a class="nav-link" href="/paid-subscribe/">推荐机场</a></li>
                                        <li><a class="nav-link" href="/client.htm">客户端</a></li>
                                        <li><a class="nav-link" href="/news/">新闻资讯</a></li>
                                    </ul>
                <i class="bi bi-list mobile-nav-toggle"></i>
            </nav><!-- .navbar -->
        </div>
    </header><!-- End Header -->
    <main id="main">
        <!-- ======= Breadcrumbs Section ======= -->
        <section class="breadcrumbs" style="margin-top: 5rem;">
            <div class="container">
                <div class="d-flex justify-content-between align-items-center">
                    <h1>JAVA8-Lambda表达式</h1>
                    <ol>
                        <li><a href="/">首页</a></li>
                        <li><a href="/news/">新闻资讯</a></li>
                        <li>正文</li>
                    </ol>
                </div>
            </div>
        </section><!-- End Breadcrumbs Section -->
        <!-- ======= Details Section ======= -->
        <section id="details" class="details">
            <div class="container">
                <div class="row">
                    <div class="col-md-9">
                                        <input type="hidden" id="share-website-info" data-name="" data-url="">
                <div class="xcblog-blog-detail xcblog-blog-detail-defined">
                      				  				  				<div id="content_views" class="markdown_views prism-dracula"> <h3> <a id="_0" rel="nofollow"></a>前言</h3> <p>行为参数化，是将方法作为参数进行传递，可以适应更多的需求变化。<br /><img decoding="async" src="http://img.555519.xyz/uploads/20230210/48978ee4c6638215eb05e2470dd715e9.jpg" alt="JAVA8-Lambda表达式"><br /> 行为参数化中的方法参数，在JDK8之前可以使用匿名累来进行传递，也可以通过一个指定接口实现一个类来进行传递。<br /><img decoding="async" src="http://img.555519.xyz/uploads/20230210/4a454f01db6d6d8a66fac8121c3ae356.jpg" alt="JAVA8-Lambda表达式"><br /> 总之，行为参数化传递代码有助于应对不断变化的需求。</p> <h3> <a id="Lambda_7" rel="nofollow"></a>什么是Lambda表达式</h3> <p>可以把Lambda表达式理解为简洁地表示可传递的匿名函数的一种方式:它没有名称，但它有参数列表、函数主体、返回类型，可能还有一个可以抛出的异常列表。<br /> Lambda表达式可以作为参数传递给方法或者存储在变量中。</p> <p><strong>Lambda表达式分为三部分</strong>、<br /> 1.参数列表。传递给Lambda的主体<br /> 2.箭头。用于把参数列表和Lambda主体隔开。<br /> 3.Lambda主体。表达式就是Lambda的返回值。可以使void、String等等类型。</p> <p>Lambda示例<br /> 布尔表达式<code>List&lt;String&gt; list) -&gt; list.isEmpty()</code><br /> 创建对象<code>() -&gt; new Apple(10)</code><br /> 消费一个对象</p> <pre><code>(Apple a) -&gt; {     System.out.println(a.getWeight()); } </code></pre> <p>从一个对象中选择/抽取<code>(String s) -&gt; s.length()</code><br /> 组合两个值<code>(int a, int b) -&gt; a * b</code><br /> 比较两个对象的值<code>(Apple a1, Apple a2) -&gt; a1.getWeight().compareTo(a2.getWeight())</code></p> <p>Lambda引用的外部变量必须是不可修改的，被final修饰的。</p> <h3> <a id="_32" rel="nofollow"></a>函数式接口</h3> <p>函数式接口就是只定义一个抽象方法的接口。并且它可以有1个或者多个默认方法。</p> <pre><code>public interface Predicate&lt;T&gt;{         boolean test (T t); } </code></pre> <p>函数描述符是什么？也就是函数的抽象方法。例如Runnable接口，它就是() -&gt; void。</p> <p>注解<code>@FunctionalInterface</code><br /> 这个标注用于表示该接口会设计成一个函数式接口。如果不符合要求，编译器会返回错误。</p> <p>任何函数式接口都不允许抛出受检异常。<br /> 如果需要抛出异常：1.可以定义接口时声明抛出受检异常。2.可以把lambda包在try/catch块中。<br /><img decoding="async" src="http://img.555519.xyz/uploads/20230210/d63ecf3de184b484e98fc263782c0eb9.jpg" alt="JAVA8-Lambda表达式"><br /><img decoding="async" src="http://img.555519.xyz/uploads/20230210/0e919c40e8b2dc153367b5c39282dd7f.jpg" alt="JAVA8-Lambda表达式"><br /> 特殊void兼容逻辑：如果Lambda主体是一个语句表达式，那它一个返回void的函数描述符兼容。<br /><img decoding="async" src="http://img.555519.xyz/uploads/20230210/a795f2a313832fb1eb43a8eab40e7a5d.jpg" alt="JAVA8-Lambda表达式"><br /> Lambda表达式不能操作外部局部变量，因为java中局部变量是存在每个线程的栈中。Lambda相当于另一个线程！<br /><img decoding="async" src="http://img.555519.xyz/uploads/20230210/5bfadd9426f7f0e005a8d1fd541729d4.jpg" alt="JAVA8-Lambda表达式"></p> <h3> <a id="JAVA8_54" rel="nofollow"></a>JAVA8中新的函数式接口</h3> <p>1.<code>java.util.function.Predicate</code><br /> java.util.function.Predicate接口定义了一个名叫test的抽象方法，它接受泛型 T对象，并返回一个boolean。<br /><img decoding="async" src="http://img.555519.xyz/uploads/20230210/76bf4bb30ccbb74a41a061ab1151fccf.jpg" alt="JAVA8-Lambda表达式"><br /> 2.<code>java.util.function.Consumer</code><br /><code>java.util.function.Consumer&lt;T&gt;</code>定义了一个名叫accept的抽象方法，它接受泛型T 的对象，没有返回(void)。你如果需要访问类型T的对象，并对其执行某些操作(打印、处理数据)，就可以使用这个接口。<br /><img decoding="async" src="http://img.555519.xyz/uploads/20230210/e2e632aa767f583b3119a0183d8d0d3f.jpg" alt="JAVA8-Lambda表达式"><br /> 3.<code>java.util.function.Function</code><br /><code>java.util.function.Function&lt;T, R&gt;</code>接口定义了一个叫作apply的方法，它接受一个 泛型T的对象，并返回一个泛型R的对象。如果你需要定义一个Lambda，将输入对象的信息映射到输出，就可以使用这个接口<br /><img decoding="async" src="http://img.555519.xyz/uploads/20230210/69a1adf08d4dbedd3f029ea942b3d882.jpg" alt="JAVA8-Lambda表达式"><br /><img decoding="async" src="http://img.555519.xyz/uploads/20230210/520bb19de255089d37f30e35f33e3fc8.jpg" alt="JAVA8-Lambda表达式"><br /><img decoding="async" src="http://img.555519.xyz/uploads/20230210/7113c6fc73a3a8fe89a27e381775275e.jpg" alt="JAVA8-Lambda表达式"><br /><img decoding="async" src="http://img.555519.xyz/uploads/20230210/84ae5ffddf632cbe3c397792e00c69c2.jpg" alt="JAVA8-Lambda表达式"></p> <h3> <a id="lambda_68" rel="nofollow"></a>lambda类型检查、推断及限制</h3> <p>类型检查过程：<br /> 检查方法接口定义、检查定义类型、检查入参类型（接收什么返回什么）<br /><img decoding="async" src="http://img.555519.xyz/uploads/20230210/b945105f09a68c5697a9141a3310542d.jpg" alt="JAVA8-Lambda表达式"><br /><img decoding="async" src="http://img.555519.xyz/uploads/20230210/534e7994bcfe1d79b1bc841cc2e6c7e4.jpg" alt="JAVA8-Lambda表达式"></p> <h3> <a id="Lambda_73" rel="nofollow"></a>简写Lambda</h3> <p><img decoding="async" src="http://img.555519.xyz/uploads/20230210/a2f65f0a79bdcb7a439a14b874aa3b2e.jpg" alt="JAVA8-Lambda表达式"><br /> 可以用在静态方法、实例方法、某个对象的实例方法。<br /><img decoding="async" src="http://img.555519.xyz/uploads/20230210/fea5a64fd43c78057d30c66bb0196f47.jpg" alt="JAVA8-Lambda表达式"><br /><strong>Lambda操作构造函数</strong></p> <pre><code>	    Supplier&lt;Apple&gt; c1 = () -&gt; new Apple();         Apple a1 = c1.get();         //简化         Supplier&lt;Apple&gt; c2 = Apple::new;         Apple a2 = c2.get();          Function&lt;Integer, Apple&gt; f1 = (weight) -&gt; new Apple(weight);         Apple a3 = f1.apply(200);         //简化         Function&lt;Integer, Apple&gt; f2 = Apple::new;         Apple a4 = f2.apply(100); </code></pre> <h3> <a id="Lambda_92" rel="nofollow"></a>复合Lambda表达式</h3> <p>1.Predicate谓词<br /><img decoding="async" src="http://img.555519.xyz/uploads/20230210/65d6fa5d77ed7f53c62c7db52fb560a4.jpg" alt="JAVA8-Lambda表达式"><br /> 注意优先级是从左到右的~<br /> 2.Function函数<br /> Function接口为此配 了andThen和compose两个默认方法。<br /><img decoding="async" src="http://img.555519.xyz/uploads/20230210/4b6fd731c4991820eca1811aa6afb367.jpg" alt="JAVA8-Lambda表达式"><br /><img decoding="async" src="http://img.555519.xyz/uploads/20230210/cb30571e6457f50eae731428834cefba.jpg" alt="JAVA8-Lambda表达式"><br /> 同样也可以自己实现<br /><img decoding="async" src="http://img.555519.xyz/uploads/20230210/bf32f671fd4c9d970839ff8313b450ae.jpg" alt="JAVA8-Lambda表达式"><br /><img decoding="async" src="http://img.555519.xyz/uploads/20230210/1fffe9a92f430e3b5743060b7383f835.jpg" alt="JAVA8-Lambda表达式"></p> <p>这种复杂Lambda也能实现<br /><img decoding="async" src="http://img.555519.xyz/uploads/20230210/190fcd4f7924e48899b370e5a2f56238.jpg" alt="JAVA8-Lambda表达式"></p> </p></div> 			                </div>
                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-103632.htm">动物医院取什么名字比较好一点（动物医院取什么名字比较好一点的）</a></p>
                                        <p>下一个：<a href="/news/article-104495.htm">动物疫苗审批流程表 动物疫苗审批流程表格</a></p>
                                    </div>
                                    </div>
                    <div class="col-md-3">
                        <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/news/article-87281.htm" title="动物疫苗销售许可证如何办理手续流程视频（动物疫苗审批流程）">动物疫苗销售许可证如何办理手续流程视频（动物疫苗审批流程）</a></li>
                        <li class="py-2"><a href="/news/article-90207.htm" title="实现单例模式的八种方法">实现单例模式的八种方法</a></li>
                        <li class="py-2"><a href="/news/article-79503.htm" title="大人被猫抓伤了怎么办（大人被猫抓伤出血要打针吗）">大人被猫抓伤了怎么办（大人被猫抓伤出血要打针吗）</a></li>
                        <li class="py-2"><a href="/news/article-76760.htm" title="华畜兽药怎么样（华畜兽药是真的吗）">华畜兽药怎么样（华畜兽药是真的吗）</a></li>
                        <li class="py-2"><a href="/news/article-70759.htm" title="源码分析 Spring Security OAuth2 生成 token 的执行流程">源码分析 Spring Security OAuth2 生成 token 的执行流程</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-4-8-free-subscribe-node.htm" title="4月8日|Shadowrocket/Clash/SSR/V2ray每天更新19.7M/S免费节点订阅链接，付费节点订阅推荐">4月8日|Shadowrocket/Clash/SSR/V2ray每天更新19.7M/S免费节点订阅链接，付费节点订阅推荐</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-4-26-node-share.htm" title="4月26日|V2ray/SSR/Clash/Shadowrocket每天更新18.4M/S免费节点订阅链接，付费节点订阅推荐">4月26日|V2ray/SSR/Clash/Shadowrocket每天更新18.4M/S免费节点订阅链接，付费节点订阅推荐</a></li>
                        <li class="py-2"><a href="/news/article-85130.htm" title="Celery教程&#8212;&#8212;&#8212;&#8212;-以守护进程方式运行worker">Celery教程&#8212;&#8212;&#8212;&#8212;-以守护进程方式运行worker</a></li>
                        <li class="py-2"><a href="/news/article-80903.htm" title="我们如何检查特定MySQL数据库的默认字符集？">我们如何检查特定MySQL数据库的默认字符集？</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-4-15-free-high-speed-nodes.htm" title="4月15日|SSR/V2ray/Clash/Shadowrocket每天更新20.8M/S免费节点订阅链接，付费节点订阅推荐">4月15日|SSR/V2ray/Clash/Shadowrocket每天更新20.8M/S免费节点订阅链接，付费节点订阅推荐</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">74</span> <a href="/date/2025-04/" title="2025-04 归档">2025-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">89</span> <a href="/date/2025-03/" title="2025-03 归档">2025-03</a></h4>
            </li>
                    </ul>
    </div>
</div>

                    </div>
                </div>
            </div>
        </section><!-- End Details Section -->
    </main><!-- End #main -->
    <!-- ======= Footer ======= -->
<footer id="footer">
    <div class="container py-4">
        <div class="copyright">
                                <p>
                                                <a href="/">首页</a> |
                                                <a href="/free-nodes/">免费节点</a> |
                                                <a href="/paid-subscribe/">推荐机场</a> |
                                                <a href="/client.htm">客户端</a> |
                                                <a href="/news/">新闻资讯</a> |
                                                <a href="/about-us.htm">关于我们</a> |
                        <a href="/disclaimer.htm">免责申明</a> |
                        <a href="/privacy.htm">隐私申明</a> |
                        <a href="/sitemap.xml">网站地图</a>
                    </p>
            <a href="/">SSR Windows免费节点订阅站</a> 版权所有 Powered by WordPress
        </div>
    </div>
</footer><!-- End Footer -->
<a href="#" class="back-to-top d-flex align-items-center justify-content-center"><i class="bi bi-arrow-up-short"></i></a>
<!-- Vendor JS Files -->
<script src="/assets/website/js/frontend/ssrwindows/jquery-3.5.1.min.js"></script>
<script src="/assets/website/js/frontend/ssrwindows/aos/aos.js"></script>
<script src="/assets/website/js/frontend/ssrwindows/bootstrap/js/bootstrap.bundle.min.js"></script>
<script src="/assets/website/js/frontend/ssrwindows/php-email-form/validate.js"></script>
<script src="/assets/website/js/frontend/ssrwindows/swiper/swiper-bundle.min.js"></script>
<!-- Template Main JS File -->
<script src="/assets/website/js/frontend/ssrwindows/main.js"></script>
<script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script>
<script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>