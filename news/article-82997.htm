<!DOCTYPE html>
<html xml:lang="zh-CN" lang="zh-CN">

<head>
        <link rel="canonical" href="https://ssrwindows.github.io/news/article-82997.htm" />
    <meta charset="utf-8">
    <meta content="width=device-width, initial-scale=1.0" name="viewport">
    <title>docker启动kafka自动退出_mac 使用 docker 搭建 kafka 集群</title>
        <meta name="description" content="Kafka 搭建: 建立Zookeeper容器: 这里我们用最简单的方式创建一个独立的Zookeeper节点，如果要考虑zookeeper的高可用，可以将其做成一个集群，最好是能有多台机器。     " />
        <link rel="icon" href="/assets/website/img/ssrwindows/favicon.ico" type="image/x-icon"/>

    <meta name="author" content="SSR Windows免费节点订阅站">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://ssrwindows.github.io/news/article-82997.htm" />
    <meta property="og:site_name" content="SSR Windows免费节点订阅站" />
    <meta property="og:title" content="docker启动kafka自动退出_mac 使用 docker 搭建 kafka 集群" />
    <meta property="og:image" content="https://ssrwindows.github.io/uploads/20240730/b69a837339c76a4838c7aa542bde2ad6.webp" />
        <meta property="og:release_date" content="2025-03-28T09:52:47" />
    <meta property="og:updated_time" content="2025-03-28T09:52:47" />
        <meta property="og:description" content="Kafka 搭建: 建立Zookeeper容器: 这里我们用最简单的方式创建一个独立的Zookeeper节点，如果要考虑zookeeper的高可用，可以将其做成一个集群，最好是能有多台机器。     " />
    
    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="docker启动kafka自动退出_mac 使用 docker 搭建 kafka 集群">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
    <link rel="dns-prefetch" href="https://fonts.googleapis.com">

    <!-- Google Fonts -->
    <link href="https://fonts.googleapis.com/css?family=Open+Sans:300,300i,400,400i,600,600i,700,700i|Raleway:300,300i,400,400i,500,500i,600,600i,700,700i|Poppins:300,300i,400,400i,500,500i,600,600i,700,700i" rel="stylesheet">
    <!-- Vendor CSS Files -->
    <link href="/assets/website/js/frontend/ssrwindows/aos/aos.css" rel="stylesheet">
    <link href="/assets/website/js/frontend/ssrwindows/bootstrap/css/bootstrap.min.css" rel="stylesheet">
    <link href="/assets/website/js/frontend/ssrwindows/bootstrap-icons/bootstrap-icons.css" rel="stylesheet">
    <link href="/assets/website/js/frontend/ssrwindows/boxicons/css/boxicons.min.css" rel="stylesheet">
    <link href="/assets/website/js/frontend/ssrwindows/glightbox/css/glightbox.min.css" rel="stylesheet">
    <link href="/assets/website/js/frontend/ssrwindows/swiper/swiper-bundle.min.css" rel="stylesheet">
    <!-- Template Main CSS File -->
    <link href="/assets/website/css/ssrwindows/style.css" rel="stylesheet">
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-RSKEBF5GLS"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-RSKEBF5GLS');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
        <!-- ======= Header ======= -->
    <header id="header" class="fixed-top  header-transparent ">
        <div class="container d-flex align-items-center justify-content-between">
            <div class="logo">
                <a href="/">
                                <span>SSR Windows</span>
                                </a>
            </div>
            <nav id="navbar" class="navbar">
                <ul>
                                        <li><a class="nav-link" href="/">首页</a></li>
                                        <li><a class="nav-link" href="/free-nodes/">免费节点</a></li>
                                        <li><a class="nav-link" href="/paid-subscribe/">推荐机场</a></li>
                                        <li><a class="nav-link" href="/client.htm">客户端</a></li>
                                        <li><a class="nav-link" href="/news/">新闻资讯</a></li>
                                    </ul>
                <i class="bi bi-list mobile-nav-toggle"></i>
            </nav><!-- .navbar -->
        </div>
    </header><!-- End Header -->
    <main id="main">
        <!-- ======= Breadcrumbs Section ======= -->
        <section class="breadcrumbs" style="margin-top: 5rem;">
            <div class="container">
                <div class="d-flex justify-content-between align-items-center">
                    <h1>docker启动kafka自动退出_mac 使用 docker 搭建 kafka 集群</h1>
                    <ol>
                        <li><a href="/">首页</a></li>
                        <li><a href="/news/">新闻资讯</a></li>
                        <li>正文</li>
                    </ol>
                </div>
            </div>
        </section><!-- End Breadcrumbs Section -->
        <!-- ======= Details Section ======= -->
        <section id="details" class="details">
            <div class="container">
                <div class="row">
                    <div class="col-md-9">
                                        <input type="hidden" id="share-website-info" data-name="" data-url="">
                  				  				  				<div id="content_views" class="htmledit_views"> <div> <h2><b>Kafka 搭建:</b></h2> <h3><b>建立Zookeeper容器:</b></h3> <p>这里我们用最简单的方式创建一个独立的Zookeeper节点，如果要考虑zookeeper的高可用，可以将其做成一个集群，最好是能有多台机器。</p> <blockquote><p>    $ docker run -d --name zookeeper -p 2181:2181 -t wurstmeister/zookeeper</p></blockquote> <p>默认的，容器内配置文件在，/conf/zoo.cfg，数据和日志目录默认在/data 和 /datalog，需要的话可以将上述目录映射到宿主机的可靠文件目录下。</p> <h3><b>建立kafka集群节点:</b></h3> <p>使用docker命令可快速在同一台机器搭建多个kafka，只需要改变brokerId和端口</p> <ul> <li>节点1:</li> </ul> <blockquote><p>    $ docker run -d --name kafka -p 9092:9092 -e KAFKA_BROKER_ID=0 -e KAFKA_ZOOKEEPER_CONNECT=192.168.0.102:2181 -e KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://192.168.0.102:9092 -e KAFKA_LISTENERS=PLAINTEXT://0.0.0.0:9092 -t wurstmeister/kafka</p></blockquote> <ul> <li>节点2:</li> </ul> <blockquote><p>    $ docker run -d --name kafka1 -p 9093:9093 -e KAFKA_BROKER_ID=1 -e KAFKA_ZOOKEEPER_CONNECT=192.168.0.102:2181 -e KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://192.168.0.102:9093 -e KAFKA_LISTENERS=PLAINTEXT://0.0.0.0:9093 -t wurstmeister/kafka</p></blockquote> <ul> <li>节点3:</li> </ul> <blockquote><p>    $ docker run -d --name kafka2 -p 9094:9094 -e KAFKA_BROKER_ID=1 -e KAFKA_ZOOKEEPER_CONNECT=192.168.0.102:2181 -e KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://192.168.0.102:9094 -e KAFKA_LISTENERS=PLAINTEXT://0.0.0.0:9094 -t wurstmeister/kafka</p></blockquote> <h3><b>这里面主要设置了4个参数</b></h3> <div class="has"> <pre class="has"><code>1KAFKA_BROKER_ID=0 2 3KAFKA_ZOOKEEPER_CONNECT=192.168.0.102:2181 4 5KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://192.168.0.102:9092 6 7KAFKA_LISTENERS=PLAINTEXT://0.0.0.0:9092</code></pre> </div> <p>中间两个参数的<code>192.168.0.102</code> 改为<code>宿主机器</code> 的IP地址，如果不这么设置，可能会导致在别的机器上访问不到 kafka。</p> <h3><b>怎么查看本机的 ip:</b></h3> <blockquote><p>    $ ifconfig en0</p></blockquote> <div style="text-align:center;"><img decoding="async" src="http://img.555519.xyz/uploads3/20220830/b5602c77bf8fd0325d62cc456b8882a6.jpg" alt="docker启动kafka自动退出_mac 使用 docker 搭建 kafka 集群"></div> <h3><b>测试kafka:</b></h3> <ul> <li>进入kafka容器的命令行</li> </ul> <blockquote><p>    $ docker exec -ti kafka /bin/bash</p></blockquote> <ul> <li>进入kafka所在目录</li> </ul> <blockquote><p>    $ cd opt/kafka_2.12-1.1.0/</p></blockquote> <h3><b>创建Replication为2，Partition为2的topic:</b></h3> <blockquote><p>    $ bin/kafka-topics.sh --create --zookeeper 192.168.0.102:2181 --replication-factor 2 --partitions 2 --topic partopic</p></blockquote> <p>或者可以通过<code>kafka-manager</code> 创建</p> <div style="text-align:center;"><img decoding="async" src="http://img.555519.xyz/uploads3/20220830/c1846d197f65cb41698fdf138beaddb1.jpg" alt="docker启动kafka自动退出_mac 使用 docker 搭建 kafka 集群"></div> <h3><b>查看topic的状态:</b></h3> <p>在kafka容器中的<code>opt/kafka_2.12-1.1.0/</code> 目录下输入</p> <blockquote><p>    $ bin/kafka-topics.sh --describe --zookeeper 192.168.0.102:2181 --topic partopic</p></blockquote> <div style="text-align:center;"><img decoding="async" src="http://img.555519.xyz/uploads3/20220830/a515ddc450bff84d76e9baff2e645e60.jpg" alt="docker启动kafka自动退出_mac 使用 docker 搭建 kafka 集群"></div> <p>显示每个分区的Leader机器为broker0，在broker0和1上具有备份，Isr代表存活的备份机器中存活的。</p> <p>当停掉kafka1后，</p> <blockquote><p>    $ docker stop kafka1</p></blockquote> <p>再查看topic状态，输出结果：</p> <div class="has"> <pre class="has"><code>1Topic:partopic PartitionCount:2 ReplicationFactor:2 Configs: 2 3Topic: partopic Partition: 0 Leader: 0 Replicas: 0,1 Isr: 0 4 5Topic: partopic Partition: 1 Leader: 0 Replicas: 1,0 Isr: 0</code></pre> </div> <h3><b>创建Kafka管理节点:</b></h3> <p><code>kafka-manager</code>有图形化UI，可以方便的监控集群状态，调整队列配置</p> <blockquote><p>    $ docker run -itd --restart=always --name=kafka-manager -p 9000:9000 -e ZK_HOSTS="192.168.0.102:2181" sheepkiller/kafka-manager</p></blockquote> <p>容器启动以后访问主机的9000端口，0.0.0:9000</p> <div style="text-align:center;"><img decoding="async" src="http://img.555519.xyz/uploads3/20220830/f907ceb14f817297a6d20897c1a6a7b5.jpg" alt="docker启动kafka自动退出_mac 使用 docker 搭建 kafka 集群"></div> <p>首次进入需要添加一个集群标识，如下图所示</p> <div style="text-align:center;"><img decoding="async" src="http://img.555519.xyz/uploads3/20220830/a80c4c9ee24b6b2550db19f13415294a.jpg" alt="docker启动kafka自动退出_mac 使用 docker 搭建 kafka 集群"></div> <p>配置好以后，通过Zookeeper该管理节点可以读取到整个Kafka集群的信息，并且我们可以通过JMX直接看到集群的健康状态</p> <div style="text-align:center;"><img decoding="async" src="http://img.555519.xyz/uploads3/20220830/12515ab4abe6655b9c8275cd58dbc333.jpg" alt="docker启动kafka自动退出_mac 使用 docker 搭建 kafka 集群"></div> <p>也可以看到主题的读写速度，偏移量等信息，如下图所示：</p> <div style="text-align:center;"><img decoding="async" src="http://img.555519.xyz/uploads3/20220830/d11979f26324426f6dfd6e9fa3c9b885.jpg" alt="docker启动kafka自动退出_mac 使用 docker 搭建 kafka 集群"></div> <p>Brokers ,Partitions,Replicas 都能看到</p> <div style="text-align:center;"><img decoding="async" src="http://img.555519.xyz/uploads3/20220830/d5567629322495261c8379eccd28d680.jpg" alt="docker启动kafka自动退出_mac 使用 docker 搭建 kafka 集群"></div> <p>以及 group:</p> <div style="text-align:center;"><img decoding="async" src="http://img.555519.xyz/uploads3/20220830/477f89f441d3adc6d495e3b55bb4498e.jpg" alt="docker启动kafka自动退出_mac 使用 docker 搭建 kafka 集群"></div> <h2><b>参考文章:</b></h2> <p>https://blog.csdn.net/lblblblblzdx/article/details/80548157</p> <p>https://blog.csdn.net/lblblblblzdx/article/details/80548294</p> <p>原文链接：[mac 使用 docker搭建 kafka集群 + Zookeeper + kafka-manager](mac 使用 docker搭建 kafka集群 + Zookeeper + kafka-manager)</p> <p>原文标题：[mac 使用 docker搭建 kafka集群 + Zookeeper + kafka-manager]</p> <p>本站使用「 署名-非商业性使用 4.0 国际 (CC BY-NC 4.0)」创作共享协议，转载或使用请署名并注明出处。</p> </div> </div> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-82278.htm">领养宠物是什么体验啊英文（领养宠物的英语怎么说）</a></p>
                                        <p>下一个：<a href="/news/article-82998.htm">宠物领养合同怎么写范本图片（宠物领养合同怎么写范本图片大全）</a></p>
                                    </div>
                                    </div>
                    <div class="col-md-3">
                        <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/news/article-79503.htm" title="大人被猫抓伤了怎么办（大人被猫抓伤出血要打针吗）">大人被猫抓伤了怎么办（大人被猫抓伤出血要打针吗）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-3-11-free-ssr-node.htm" title="3月11日|Shadowrocket/V2ray/Clash/SSR每天更新20.1M/S免费节点订阅链接，付费节点订阅推荐">3月11日|Shadowrocket/V2ray/Clash/SSR每天更新20.1M/S免费节点订阅链接，付费节点订阅推荐</a></li>
                        <li class="py-2"><a href="/news/article-53472.htm" title="猫三联加狂犬一共几针（猫三联 狂犬疫苗）">猫三联加狂犬一共几针（猫三联 狂犬疫苗）</a></li>
                        <li class="py-2"><a href="/news/article-42852.htm" title="解决python针对hdfs上传和下载问题">解决python针对hdfs上传和下载问题</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-1-19-free-node-subscribe-links.htm" title="1月19日|V2ray/Clash/SSR/Shadowrocket每天更新22.4M/S免费节点订阅链接，付费节点订阅推荐">1月19日|V2ray/Clash/SSR/Shadowrocket每天更新22.4M/S免费节点订阅链接，付费节点订阅推荐</a></li>
                        <li class="py-2"><a href="/news/article-40360.htm" title="猫咪3针疫苗间隔多久打一次好一点（猫三针疫苗间隔多久打）">猫咪3针疫苗间隔多久打一次好一点（猫三针疫苗间隔多久打）</a></li>
                        <li class="py-2"><a href="/news/article-65648.htm" title="2020年动物疫苗采购中标结果公布（2021年动物疫苗采购）">2020年动物疫苗采购中标结果公布（2021年动物疫苗采购）</a></li>
                        <li class="py-2"><a href="/news/article-42344.htm" title="附近的动物医院（附近动物医院地址电话）">附近的动物医院（附近动物医院地址电话）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-1-14-free-node-subscribe.htm" title="1月14日|Clash/SSR/Shadowrocket/V2ray每天更新20.3M/S免费节点订阅链接，付费节点订阅推荐">1月14日|Clash/SSR/Shadowrocket/V2ray每天更新20.3M/S免费节点订阅链接，付费节点订阅推荐</a></li>
                        <li class="py-2"><a href="/news/article-40361.htm" title="宠物粮食成本分析表（宠物粮食原材料）">宠物粮食成本分析表（宠物粮食原材料）</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">86</span> <a href="/date/2025-03/" title="2025-03 归档">2025-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">84</span> <a href="/date/2025-02/" title="2025-02 归档">2025-02</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">84</span> <a href="/date/2025-01/" title="2025-01 归档">2025-01</a></h4>
            </li>
                    </ul>
    </div>
</div>

                    </div>
                </div>
            </div>
        </section><!-- End Details Section -->
    </main><!-- End #main -->
    <!-- ======= Footer ======= -->
<footer id="footer">
    <div class="container py-4">
        <div class="copyright">
                    <p>
                        <a href="/">首页</a> | 
                        <a href="/free-node/">免费节点</a> | 
                        <a href="/news/">新闻资讯</a> |
                        <a href="/about-us.htm">关于我们</a> |
                        <a href="/disclaimer.htm">免责申明</a> |
                        <a href="/privacy.htm">隐私申明</a> |
                        <a href="/sitemap.xml">网站地图</a>
                    </p>
            <a href="/">SSR Windows免费节点订阅站</a> 版权所有 Powered by WordPress
        </div>
    </div>
</footer><!-- End Footer -->
<a href="#" class="back-to-top d-flex align-items-center justify-content-center"><i class="bi bi-arrow-up-short"></i></a>
<!-- Vendor JS Files -->
<script src="/assets/website/js/frontend/ssrwindows/jquery-3.5.1.min.js"></script>
<script src="/assets/website/js/frontend/ssrwindows/aos/aos.js"></script>
<script src="/assets/website/js/frontend/ssrwindows/bootstrap/js/bootstrap.bundle.min.js"></script>
<script src="/assets/website/js/frontend/ssrwindows/php-email-form/validate.js"></script>
<script src="/assets/website/js/frontend/ssrwindows/swiper/swiper-bundle.min.js"></script>
<!-- Template Main JS File -->
<script src="/assets/website/js/frontend/ssrwindows/main.js"></script>
<script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script>
<script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>